<html metal:use-macro="load: ../base_layout.pt">
<html lang="${request.locale_name}">
<head>
    <link rel="stylesheet" type="text/css" href="${request.static_url('ligando:static/css/peptide_marker.css')}">
</head>

<body>
<!--? TODO: add further information-->

<metal:block fill-slot="content">

    <div class="container">
        <div class="row">
            <div class="col-md-12 text-center">
                <h1 id="title"></h1>
            </div>
        </div>

        <div class="row center-block">
            <div class="col-md-5 ">
                <table class="table table-striped table-bordered">
                    <tr>
                        <td>Gene</td>
                        <td id="gene_name"></td>
                    </tr>
                    <tr class="alt">
                        <td>Description:</td>
                        <td id="description"></td>
                    </tr>
                    <tr class="alt">
                        <td>Uniprot:</td>
                        <td id="uniprot"></td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-md-7 ">
                <h3>Sequence:</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-md-7">
                <div>
                    <table class="table table-striped table-bordered protein_sequence">
                        <tr>
                            <td id="sequence"></td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="col-md-5">


                <table class="table table-striped table-bordered" id="peptide_sequences">
                        <thead>
                        <tr>
                            <td>Peptides</td>
                            <td title="Proteins on which the peptide are found">Proteins</td>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td></td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


    <script>

        // Function for the peptide highlighting in the sequence
        function open_highlighting(pos_list) {
            var result = "";
            for (var item in pos_list) {
                result += '<span class="sI' + item + '">';
            }
            return result;
        }

        function close_highlighting(pos_list) {
            var result = "";
            for (var item in pos_list) {
                result += '</span>';
            }
            return result;
        }
        function add_pep_to_id_list(pos_list, pos) {
            var i = 0;
            while (true) {
                if (!pos_list.hasOwnProperty(i.toString())) {
                    pos_list[i.toString()] = pos;
                    return pos_list;
                }
                i++;
            }
        }
        function remove_pep_to_id_list(pos_list, pos) {
            var i = 0;
            while (true) {
                if (pos_list.hasOwnProperty('' + i)) {
                    if (pos_list[i.toString()] == pos) {
                        delete pos_list[i.toString()];
                        return pos_list;
                    }
                }
                i++;
            }
        }

        // Review: If to many peptides are marked it looks really bad e.g. P07203
        $(document).ready(function () {


            // TODO: add link to peptides
            // Setting the title
            document.getElementById("title").innerHTML = ${statistics}[0]["name"];
            // Setting basic information
            document.getElementById("gene_name").innerHTML = ${statistics}[0]["gene_name"];
            document.getElementById("description").innerHTML = ${statistics}[0]["description"].split("HUMAN")[1].split("OS=")[0];
            document.getElementById("uniprot").innerHTML = "<a data-toggle='tooltip' title='Go to Uniprot' href='http://www.uniprot.org/uniprot/" + ${statistics}[0]["name"] + "'>" + ${statistics}[0]["name"] + "</a>";
            var sequence = ${statistics}[0]["sequence"];
            var complete_sequence = "";
            var numbers = "";
            var modified_sequence = "";
            var sequence_start = ${sequence_start};
            var sequence_end = ${sequence_end};
            var pos_list = {};
            var nlines = 0;
            for (var j = 0; j < sequence.length; j = j + 10) {
                for (var i = j; i < j + 10; i = i + 1) {
                    // Can not use inArray cause multi peptides in the array may have the same start/end
                    for (var start = 0; start < sequence_start.length; start++) {
                        if (sequence_start[start] == i) {
                            pos_list = add_pep_to_id_list(pos_list, start);
                        }
                    }
                    for (var end = 0; end < sequence_end.length; end++) {
                        if (sequence_end[end] == i) {
                            pos_list = remove_pep_to_id_list(pos_list, end);
                        }
                    }
                    // Sequence row
                    if (i < sequence.length) {
                        modified_sequence = modified_sequence + open_highlighting(pos_list) + sequence.substring(i, i + 1) + close_highlighting(pos_list);
                    }
                }
                nlines = Math.max(nlines, (Object.keys(pos_list).length % 4) + 1);



                modified_sequence += " ";
                // Numbers row
                for (var n = 0; n < 10 - (j + 10).toString().length; n++) {
                    numbers = numbers + " ";
                }
                numbers = numbers + (j + 10) + " ";
                if ((j + 10) % 50 == 0 && j != 0) {
                    complete_sequence = complete_sequence + numbers + "<br>" + "<p style='margin-bottom:" + (nlines * 8) + "px;margin-top:0px'>" + modified_sequence + "<br>" + "</p>";
                    modified_sequence = "";
                    numbers = "";
                    nlines = 0;
                }
            }
            complete_sequence = complete_sequence + numbers + "<br>" + "<p style='margin-bottom: 8px;margin-top:0px'>" + modified_sequence + "<br>" + "</p>";
            document.getElementById("sequence").innerHTML = complete_sequence;
        });
        $(document).ready(function () {
// create dataTable
            $('#peptide_sequences').dataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                searching: false,
                data: ${sequences},
                dom: 'Bfrtip',
                buttons: [{
                    extend: 'collection',
                    text: "Export",
                    buttons: ['csv', 'excel', 'pdf']
                },{
                    text: 'Show more details',
                    action: function ( e, dt, node, config ) {
                        post('../peptide_query', {protein: '${protein}', grouping:'peptide', count:'${sequences}.length' } )}
                    }
                ],
                columns: [
                    {data: "sequence",
                        "render": function (data, type, row) {
                        return "<a href= '/peptide/" + data + "'>" + data + "</a>";
                    }},
                        { data: "protein",
                        // split protein string and create single links
                        "render": function (data, type, row) {
                            var prot_split = data.split(",");
                            var return_string = "";
                            for (var prot = 0; prot < prot_split.length; prot++) {
                                if (prot < prot_split.length - 1) {
                                    return_string += "<a class='nostylelink'  href= '/protein/" + prot_split[prot] + "$uniprot'>" + prot_split[prot] + "</a>, ";
                                } else {
                                    return_string += "<a class='nostylelink'  href= '/protein/" + prot_split[prot] + "$uniprot'>" + prot_split[prot] + "</a>";
                                }
                            }
                            return return_string
                        }}
                ]
            });
        });
    </script>


</metal:block>

</body>

</html>

</html>
