<html metal:use-macro="load: ../base_layout.pt" lang="${request.locale_name}">

<body>
<metal:block fill-slot="content">

    <div class="container">
        <div class="row">
            <div class="col-md-12 ">
                <ol class="breadcrumb">
                    <li><a href="/">Home</a></li>
                    <li>HLA Browser</li>
                    <li>HLA-${hla}</li>
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                <h1 id="title">HLA-${hla}</h1>
            </div>
        </div>



        <div class="row">
            <div class="col-md-6 ">
                <div class="row">
                    <div class="col-md-6 ">
                            <h1>Statistics</h1>
                            <table class="table table-striped table-bordered">
                                <tr>
                                    <td>Binding peptides</td>
                                    <td id="bindpep_stat" align="right"></td>
                                </tr>
                                <tr>
                                    <td>Sources</td>
                                    <td id="source_stat" align="right"></td>
                                </tr>
                                <tr>
                                    <td>Samples</td>
                                    <td id="sample_stat" align="right"></td>
                                </tr>
                            </table>
                    </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 ">
                                <div id="distribution" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                            </div>
                        </div>

                        </div>
                <div class="col-md-1 ">

                </div>
                <div class="col-md-4">
                            <h1>HLA distribution</h1>
                    <table id="organ_table" class="table-striped" cellspacing="2px" width="100%">

                    </table>

                </div>
            </div>




        <!-- Peptide-binding motif -->
        <div class="row" tal:condition="not hla.startswith('D')">
            <div class="col-md-12 ">
            <h1>Peptide binding motif</h1>
                <!-- Creating tabs -->
                <ul class="nav nav-tabs" id="seqlogo_tabs">

                </ul>
                <div class="tab-content" id="seqlogo_content">


                </div>
            </div>
        </div>

    </div>

    <script>

    var organs = ["heart", "brain", "spleen", "breast", "uterus", "prostate", "lung", "kidney", "bladder", "liver", "skin", "stomach", "pancreas", "thyroid"];
    var suborgans = {"heart":["heart", "aorta", "muscle", "tongue"],
        "brain":["brain", "cerebellum", "small brain", "myelon", "bone marrow"],
        "spleen": ["spleen"],
        "breast": ["mamma"],
        "uterus": ["uterus", "ovary"],
        "prostate": ["prostate", "testis"],
        "lung": ["lung", "trachea"],
        "kidney": ["adrenal gland", "kidney"],
        "bladder": ["bladder"],
        "liver": ["liver"],
        "skin": ["skin"],
        "stomach": ["colon", "esophagus", "stomach", "small intestine"],
        "pancreas": ["pancreas"],
        "thyroid": ["thyroid", "glandula sublingualis", "lymph node"]};
        //tissue pie chart
    var chart_organs = {'heart': '<img id="heart" width="40px" src="../static/images/herz.svg">',
                            'brain': '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="brain" width="40px" src="../static/images/hirn.svg"> </a><ul class="dropdown-menu" id="brain_menu"></ul></div>',
                            'spleen': '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="spleen" width="40px" src="../static/images/milz.svg"> </a><ul class="dropdown-menu" id="spleen_menu"></ul></div>',
                            'breast': '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="breast" width="40px" src="../static/images/brust_orange.svg"> </a><ul class="dropdown-menu" id="breast_menu"></ul></div>',
                            'uterus': '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="uterus" width="40px" src="../static/images/uterus_orange.svg"> </a><ul class="dropdown-menu" id="uterus_menu"></ul></div>',
                            'prostate': '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="prostate" width="40px" src="../static/images/prostata_hoden.svg"> </a><ul class="dropdown-menu" id="prostate_menu"></ul></div>',
                            "lung": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="lung" width="40px" src="../static/images/lungen.svg"> </a><ul class="dropdown-menu" id="lung_menu"></ul></div>',
                            "kidney": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="kidney" width="40px" src="../static/images/niere.svg"> </a><ul class="dropdown-menu" id="kidney_menu"></ul></div>',
                            "bladder": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="bladder" width="40px" src="../static/images/blase.svg"> </a><ul class="dropdown-menu" id="bladder_menu"></ul></div>',
                            "liver": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="liver" width="40px" src="../static/images/leber.svg"> </a><ul class="dropdown-menu" id="liver_menu"></ul></div>',
                            "skin": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="skin" width="40px" src="../static/images/haut.svg"> </a><ul class="dropdown-menu" id="skin_menu"></ul></div>',
                            "stomach": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="stomach" width="40px" src="../static/images/magen.svg"> </a><ul class="dropdown-menu" id="stomach_menu"></ul></div>',
                            "pancreas": '<div class="dropdown" ><a href="#" class="dropdown-toggle picture-link"  data-toggle="dropdown" ><img id="pancreas" width="40px" src="../static/images/pankreas.svg"> </a><ul class="dropdown-menu" id="pancreas_menu"></ul></div>',

                            "thyroid": '<a id="popover" rel="popover" data-content="" title="Popover with image"><img id="thyroid" width="40px" src="../static/images/thyroidea.svg"> </a>'
};

    organ_images = {heart:'<img id="brain" class="table_pic" src="../static/images/herz.svg">',
                         brain:'<img id="brain" class="table_pic" src="../static/images/hirn.svg">',
                         spleen:'<img id="brain" class="table_pic" src="../static/images/milz.svg">',
                         breast:'<img id="brain" class="table_pic" src="../static/images/brust_orange.svg">',
                         uterus:'<img id="brain" class="table_pic" src="../static/images/uterus_orange.svg">',
                         prostate:'<img id="brain" class="table_pic" src="../static/images/prostata_hoden.svg">',
                         lung:'<img id="brain" class="table_pic" src="../static/images/lungen.svg">',
                         kidney:'<img id="brain" class="table_pic" src="../static/images/niere.svg">',
                         bladder:'<img id="brain" class="table_pic" src="../static/images/blase.svg">',
                         liver:'<img id="brain" class="table_pic" src="../static/images/leber.svg">',
                         skin:'<img id="brain" class="table_pic" src="../static/images/haut.svg">',
                         stomach:'<img id="brain" class="table_pic" src="../static/images/magen.svg">',
                         pancreas:'<img id="brain" class="table_pic" src="../static/images/pankreas.svg">',
                         thyroid:'<img id="brain" class="table_pic" src="../static/images/thyroidea.svg">'};
    var date = new Date();

    var max_value = ${max_values};

    function format ( d ) {
        console.log(d)
        // `d` is the original data object for the row
        var result = '<table id = "sub_organ_table_'+ d['organ'] +'" class="display table-striped" cellspacing="0" width="100%">'
            ;
        for (key in d) {
            if(key!="count" && key != "organ") {
                result += '<tr style="height: 20px" >' +
                        '<td>' + '<a  href="/organ_hla/' + key+ '$${hla}' + '">'+ key + '</a></td>' +
                        '<td></td>' +
                        '<td> <a  href="/organ_hla/' + key+ '$${hla}' + '">' +'<div style="background-color: #1d71b8; height: 18px ; width:'+ (d[key]/max_value['organ_max'])*100+'%">'+'<img ></div></a>' + '</td>' +
                        '<td><a  href="/organ_hla/' + key+ '$${hla}' + '">' + d[key] + '</a></td>' +

                        '</tr>';
            }
        }

        result += '</table>';


        return result;
    }



$(document).ready(function() {
    var table = $('#organ_table').DataTable( {
        "data": ${organ_table_data},
        "columns": [
            {
                "className":      'details-control',
                "orderable":      false,
                "defaultContent": '',
                width: '10%',
                data: "organ",
                        "render": function (data, type, row) {
                            return organ_images[data];
                        }
            },
            {data: "count",
                        "render": function (data, type, row) {
                            return '<div style="background-color: #7cb5ec; height: 20px ; width:'+ (data/max_value['organ_max'])*100+'%"><img ></div>';
                        },
                width: '90%',
                "className":      'details-control',
                "orderable":      false,
                "defaultContent": ''
            }],
        ordering: false,
        searching: false,
        paging: false,
        info: false,

    } );

    // Add event listener for opening and closing details
    $('#organ_table tbody').on('click', 'td.details-control', function () {
        var tr = $(this).closest('tr');
        var row = table.row( tr );

        if ( row.child.isShown() ) {
            // This row is already open - close it
            row.child.hide();
            tr.removeClass('shown');



        }
        else {
            // Open this row
            row.child( format(row.data()) ).show();
            tr.addClass('shown');

            $('#sub_organ_table_'+ row.data()['organ']).DataTable( {
                "columns": [
            {
                width: '10%' },
            {
                width: '5px' },
            {
                width: '80%'
            },
            {
                width: '9%'}],
        ordering: false,
        searching: false,
        paging: false,
        info: false
    } );


        }
    } );
} );
        var min_len  = 8;
        var max_len = 10;
        var peptide_distribution_array = {};
        for(var i = 0; i<${peptide_distribution}.length; i++){
            peptide_distribution_array[${peptide_distribution}[i]["length"]] = ${peptide_distribution}[i]["count"];
            if(${peptide_distribution}[i]["count"]>10){
                min_len = Math.min(min_len, ${peptide_distribution}[i]["length"]);
                max_len = Math.max(max_len, ${peptide_distribution}[i]["length"]);
            }
        }


        $(document).ready(function () {
            // set statistics
            document.getElementById("bindpep_stat").innerHTML = "<a title='Show all Peptides'  class='nostylelink' href='javascript:post(\x22../peptide_query\x22, {hla_typing: \x22${hla}\x22, grouping:\x22peptide\x22}," + ${statistic}[0]["binding_peptide_count"] + " )'> " + ${statistic}[0]["binding_peptide_count"] + "</a>";
            document.getElementById("source_stat").innerHTML = ${sources}.length;
            document.getElementById("sample_stat").innerHTML = ${statistic}[0]["sample_count"];


            if('${hla}'.indexOf("D") == -1 ){
                var any_seqlogo = false;
                for(i = min_len; i <= max_len; i++) {

                    if(peptide_distribution_array[i]>10) {
                        any_seqlogo =true;
                        if (i == 9) {
                            $("#seqlogo_tabs").append('<li class="active"><a href="#' + i + 'mer" data-toggle="tab">' + i + 'mer</a></li>');

                            $("#seqlogo_content").append('<div class="tab-pane fade in active" id="'+ i +'mer">' +
                                '<div style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto">' +
                                '<img style="height: 400px; display: block; text-align: center; line-height: 100px; ' + /* needed to align alternative text */
                                'vertical-align: middle; margin: 0 auto" id="seqlogo_'+ i +'" src="" alt="No peptide-binding motif available yet.">' +
                                '</div>' +
                                '</div>'
                            )

                        } else {
                            $("#seqlogo_tabs").append('<li ><a href="#' + i + 'mer" data-toggle="tab">' + i + 'mer</a></li>');
                            $("#seqlogo_content").append('<div class="tab-pane fade" id="'+ i +'mer">' +
                                '<div style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto">' +
                                '<img style="height: 400px; display: block; text-align: center; line-height: 100px; ' + /* needed to align alternative text */
                                'vertical-align: middle; margin: 0 auto" id="seqlogo_'+ i +'" src="" alt="No peptide-binding motif available yet.">' +
                                '</div>' +
                                '</div>'
                            )
                        }

                        temppath = "../static/seqlogo/A_0101.png";
                        document.getElementById("seqlogo_"+i).src =  temppath.slice(0, -10)+ "test/" + '${hla}'.replace(":", "").replace("*","_") + "_"+i+".png";
                    }else {
                        $("#seqlogo_tabs").append('<li class="disabled"><a href="#' + i + 'mer" data-toggle="tab">' + i + 'mer</a></li>');
                        $("#seqlogo_content").append('<div class="tab-pane fade in active" id="' + i + 'mer">' +
                                '<div style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto">' +
                                '<img style="height: 400px; display: block; text-align: center; line-height: 100px; ' + /* needed to align alternative text */
                                'vertical-align: middle; margin: 0 auto" id="seqlogo_' + i + '" src="" alt="No peptide-binding motif available yet.">' +
                                '</div>' +
                                '</div>'
                        )
                    }
                }





            }

            /*<li class="active"><a href="#9mer" data-toggle="tab">9mer</a></li>
                    <li><a href="#10mer" data-toggle="tab">10mer</a></li>
                    <li><a href="#11mer" data-toggle="tab">11mer</a></li>
                    <li><a href="#12mer" data-toggle="tab">12mer</a></li>*/

            // set the corresponding seqlogo
            for(i = min_len; i <= max_len; i++){
                //url = "ligando:static/seqlogo/test/" +'${hla}'.replace(":", "").replace("*","_")+"_"+i + ".png"



            }

        });



        // Date of visit
        var date = new Date();
        // Peptide length distribution for hla
        $(document).ready(function () {

            var options = {
                chart: {
                    type: 'column'
                },
                credits: {
                    enabled: false
                },
                title: {
                    text: 'Peptide length distribution for ' + '${hla}'
                },
                exporting: {
                    chartOptions: {
                         title: {
                            text: 'Peptide length distribution for ' + '${hla}'
                        },
                        subtitle: {
                            text: "Source: " + document.URL + ", " + date.toUTCString() ,
                            align: "left",
                            verticalAlign: "bottom",
                            y: 10
                        }
                    },
                    filename: 'Peptide length distribution for ' + '${hla}'
                },
                xAxis: {
                    type: [],
                    title: {
                        text: 'Length'
                    }
                },
                yAxis: {
                    title: {
                        text: 'Number of peptides'
                    }
                },
                series: [],
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.x +
                                ' : ' + this.y + '</b>';
                    }
                }

            };

            protein_stats = ${peptide_distribution};
            var series = {
                name: ["Number of peptides"],
                data: [],
                showInLegend: false,
                point: {
                        events: {
                            click: function () {
                             post("../peptide_query", {hla_typing: "${hla}", grouping:"peptide", length_1: this.category-1, length_2: (this.category +1)}, this.y)
                            }
                        }
                    }
            };
            var categories = [];
            $.each(protein_stats, function (i, row) {
                categories.push(parseInt(row["length"]));
                //series.name.push(row["gene_name"]+"/"+ row["name"]);
                series.data.push(parseInt(row["count"]));

            });
            options.series.push(series);
            options.xAxis.categories = categories;


            $('#distribution').highcharts(options);
        });

    </script>

</metal:block>
</body>

</html>