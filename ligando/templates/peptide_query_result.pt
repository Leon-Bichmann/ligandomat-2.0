<html metal:use-macro="load: base_layout.pt">
<!DOCTYPE html>
<html lang="${request.locale_name}">
<head>

</head>

<body>

<!--? TODO: Rewrite whole page-->
<metal:block fill-slot="content">
    <div class="container">
        <div class="row">
            <div class="row">
                <div class="col-md-10 col-md-offset-1">
                    <ol class="breadcrumb">
                        <li><a href="/">Home</a></li>
                        <li>Peptides</li>
                    </ol>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10 col-md-offset-1" style="padding-bottom: 10px">
                    <span  id="search_params"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10 col-md-offset-1">
                    <!--? Result table, with different stylings for different groupings-->
                    <table id="example" class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>

                        <tr>
                            <th>Sequence</th>
                            <th>Protein</th>
                            <th>Gene Name</th>
                            <th>Tissue</th>
                            <th>HLA Typing</th>
                        </tr>

                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>


    <script>


        $(document).ready(function () {
            // Setting search parameters
            var search_text = "Filtered results by ";
            var search = ${search};
            var counter = 0;
            for (var property in search) {
                if(counter == 0) {
                    search_text = search_text + "<b>"+ search[property] + "</b>";
                }else{
                    search_text = search_text + " and <b>" + search[property]+"</b>";
                }
                counter += 1;
            }
            $("#search_params").html(search_text)


            $('#example').dataTable({
                data: ${project},
                columns: [
                    { data: "sequence",
                        "render": function (data, type, row) {
                            return "<a class='nostylelink'  href= '/peptide/" + data + "'>" + data + "</a>";
                        } },
                    { data: "protein",
                        // split protein string and create single links
                        "render": function (data, type, row) {
                            var prot_split = data.split(",");
                            var return_string = "";
                            for (var prot = 0; prot < prot_split.length; prot++) {
                                if (prot < prot_split.length - 1) {
                                    return_string += "<a class='nostylelink'  href= '/protein/" + prot_split[prot] + "$uniprot'>" + prot_split[prot] + "</a>, ";
                                } else {
                                    return_string += "<a class='nostylelink'  href= '/protein/" + prot_split[prot] + "$uniprot'>" + prot_split[prot] + "</a>";
                                }
                            }
                            return return_string
                        }},

                    { data: "gene_name",
                        // split protein string and create single links
                        "render": function (data, type, row) {
                            var prot_split = data.split(",");
                            var return_string = "";
                            for (var prot = 0; prot < prot_split.length; prot++) {
                                if (prot < prot_split.length - 1) {
                                    return_string += "<a class='nostylelink'  href= '/protein/" + prot_split[prot] + "$gene_name'>" + prot_split[prot] + "</a>, ";
                                } else {
                                    return_string += "<a class='nostylelink'  href= '/protein/" + prot_split[prot] + "$gene_name'>" + prot_split[prot] + "</a>";
                                }
                            }
                            return return_string
                        }},

                    { data: "tissue",
                        // split source string and create single links
                        "render": function (data, type, row) {
                            var source_split = String(data).split(",");
                            var return_string = "";
                            for (var source = 0; source < source_split.length; source++) {
                                if (source < source_split.length - 1) {
                                    return_string += "<a class='nostylelink'  href= '/organ/" + source_split[source] + "'>" + source_split[source] + "</a>, ";
                                } else {
                                    return_string += "<a class='nostylelink'  href= '/organ/" + source_split[source] + "'>" + source_split[source] + "</a>";
                                }
                            }
                            return return_string
                        }},

                    { data: "hla_typing",
                        // split HLA string and create single links
                        "render": function (data, type, row) {
                            var hla_split = data.split(",");
                            var return_string = "";
                            for (var hla = 0; hla < hla_split.length; hla++) {
                                if (hla < hla_split.length - 1) {
                                    return_string += "<a class='nostylelink'  href= '/hla/" + hla_split[hla] + "'>" + hla_split[hla] + "</a>, ";
                                } else {
                                    return_string += "<a class='nostylelink'  href= '/hla/" + hla_split[hla] + "'>" + hla_split[hla] + "</a>";
                                }
                            }
                            return return_string
                        }}
                ],
                dom: 'Bfrtip',
                buttons: ['csv', 'excel', 'pdf']


            });
        });
    </script>

</metal:block>
</body>
</html>
</html>
